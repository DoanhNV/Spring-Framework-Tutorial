<!DOCTYPE unspecified PUBLIC "//UNKNOWN/" "unknown.dtd">
I. Author and Createion
- Srping framework is open source Java Platform that provide comprehensive infrastructure support for developing robust Java application
Eseasyly and Radpily.
- Author: Rod Johnson 
- Realease: was the first released under the apache 2.0 lisence - june 2003
II. Overview
1. Feature
- Milion people in the world use Spring to create : Performing, Easely Testable, ReuseAble Code.
- Spring is lightweight when it come to size and tranparency. Basic version is around 2MB.
- Core feature of Spring can be used to develope any java application.
- Spring target to J2EE development easier And Promote good programing by enabling POJO.
2. Benefit
	1. Enabling POJO => dont' need EJB container such chas Application SerVer,developer have option only Robust Container: tomcat...
	2. Organized in modular fashion. => the classed and packages are substantial,you only have to worry about the one you need and
	   ignore the rest.
	3. Not Reivent the Wheel, instead of that, it make use of some existing technologies: serveral ORM Framework,Loging framework,
	   JEE,Quataz and JDK Timer, and other view technologies.
	4. Environment dependent code + Pojo => easy to test
	5. Well-designed web MVC Framework
	6. Convenient API to translate technologies-specific exception(thrown by JDBC,Hibernate,JDO...) into consistent and Unchecked Exception
	7. Lightweight IOC container tend to lightweight => benificial for deploying application when computer Limit memory or CPU.
	8. Providing consistent transaction to Scale down to local transaction(single database,...) or Scale up to global database(JTA)
3.DI (Dependency Injection)
- DI is the one concrete example of  Inversion of Controll.
- Purpose: in Complex java application, classes should be design as dependent as posible FOR: Reusing code and Testing => DI will help glue these
class together.
- DI happend when passing param in the way Constructor or Setter method.
- DI is the Heart of Spring Framework.
4.AOP (Aspect Oriented Programing)
- functions that span multiple point(method...) is called Crosscuting-Concerns 
- AOP happend in some case: Logging,Declarity Transaction,Security,Caching...
* The key unit of modularity of OOP is class <=> The Key unit of modularity in AOP is aspect
=> class ~ aspect = (a class in AOP is called Aspect) 
- Spring AOP module Provide  an aspect-oriented programing inplementation for define method-interceptor,pointcut...	
III. Architechture
- Spring is modular
- Spring provide about 20 module.
1. Core container
- Core: module provide fundamental parts of Spring, including DI and IoC.
- Bean: provide bean factory 
- Context: module build on the solid base provided by Core and Bean. => it is medium to access any object and configured.
+ Application Context interface is the focal point of Context module.
- SpEL: provide powerful expression language for query and multipulate object graph at runtime.
2. Data access/ Integration
- JDBC: provide a JDBC-abstraction layer => remove the need tedious JDBC related Coding.
- ORM: provides integration layer for popular object-relational mapping APIs: JPA,JDO,Hibernate,iBatis.
- OXM: provides abtraction layer that support object/xml mapping implementation: JaxB,castor,XMLBeans,JiBX and XStream.
- JMS: container feature for producing and consuming Message.
- Transaction: support Programatic and Declaritive transaction management for special class implement inteface and for all your POJOS.
3. Web
- WEB: provide basic web-oriented integration features such as multipart file upload and initialization of of IoC container
using servlet-listioner and web-oriented contextx.
- Web M-V-C: implement MVC.
- Web-Socket: provide web-socket based, two-way comunication between client and the server in the web application.
- Web-Portlet: implementation MVC is used in portlet environment and morrors the functionality of Web-Servlet.
4. Miscellaneous
- AOP
- Aspect : provide integration with AspectJ , powerfull module of AOP
- Instrument: provide instrumentation support and class loader implementation to be used in certain application servers.
- Support STOMP as Web-Socket sub-protocol
- Test: support JUnit and TestNG.
 	

	
